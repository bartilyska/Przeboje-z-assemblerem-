Microsoft (R) Macro Assembler Version 5.00                  1/4/25 23:38:13
                                                             Page     1-1


       1				; Program gwiazdki.asm 
       2				; Wyświetlanie znaków * w takt przerw
					ań zegarowych 
       3				; Uruchomienie w trybie rzeczywistym pr
					ocesora x86 
       4				; lub na maszynie wirtualnej 
       5				; zakończenie programu po naciśnięci
					u klawisza 'x' 
       6				; asemblacja (MASM 4.0): masm gwiazdki.
					asm,,,; 
       7				; konsolidacja (LINK 3.60): link gwiazd
					ki.obj; 
       8				.386 
       9 0000				rozkazy SEGMENT use16 
      10				ASSUME CS:rozkazy 
      11				;======================================
					====================== 
      12				; procedura obsługi przerwania zegarow
					ego 
      13 0000				obsluga_zegara PROC 
      14				; przechowanie używanych rejestrów 
      15 0000  50			push ax 
      16 0001  53			push bx 
      17 0002  06			push es 
      18				; wpisanie adresu pamięci ekranu do re
					jestru ES - pamięć 
      19				; ekranu dla trybu tekstowego zaczyna s
					ię od adresu B8000H, 
      20				; jednak do rejestru ES wpisujemy warto
					ść B800H, 
      21				; bo w trakcie obliczenia adresu proces
					or każdorazowo mnoży 
      22				; zawartość rejestru ES przez 16 
      23 0003  B8 B800			mov ax, 0B800h ;adres pamięci ekranu 
      24 0006  8E C0			mov es, ax 
      25				; zmienna 'licznik' zawiera adres bież
					ący w pamięci ekranu 
      26 0008  2E: 8B 1E 0031 R		mov bx, cs:licznik 
      27				; przesłanie do pamięci ekranu kodu A
					SCII wyświetlanego znaku 
      28				; i kodu koloru: biały na czarnym tle 
					(do następnego bajtu) 
      29 000D  26: C6 07 2A		mov byte PTR es:[bx], '*' ; kod ASCII 
      30 0011  26: C6 47 01 07		mov byte PTR es:[bx+1], 00000111B ; kol
					or 
      31				; zwiększenie o 2 adresu bieżącego w
					 pamięci ekranu 
      32 0016  83 C3 02			add bx,2 
      33				; sprawdzenie czy adres bieżący osią
					gnął koniec pamięci ekranu 
      34 0019  81 FB 0FA0		cmp bx,4000 
      35 001D  0F 82 0024 R		jb wysw_dalej ; skok gdy nie koniec ekr
					anu 
      36				; wyzerowanie adresu bieżącego, gdy c
Microsoft (R) Macro Assembler Version 5.00                  1/4/25 23:38:13
                                                             Page     1-2


					ały ekran zapisany 
      37 0021  BB 0000			mov bx, 0 
      38				;zapisanie adresu bieżącego do zmienn
					ej 'licznik' 
      39 0024				wysw_dalej: 
      40 0024  2E: 89 1E 0031 R		mov cs:licznik,bx 
      41				; odtworzenie rejestrów 
      42 0029  07			pop es 
      43 002A  5B			pop bx 
      44 002B  58			pop ax 
      45				; skok do oryginalnej procedury obsług
					i przerwania zegarowego 
      46 002C  2E: FF 2E 0033 R		jmp dword PTR cs:wektor8 
      47				; dane programu ze względu na specyfik
					ę obsługi przerwań 
      48				; umieszczone są w segmencie kodu 
      49 0031  0000			licznik dw 0 ; wyświetlanie począwszy
					 od 2. wiersza 
      50 0033  ????????			wektor8 dd ? 
      51 0037				obsluga_zegara ENDP 
      52				;======================================
					====================== 
      53				; program główny - instalacja i deins
					talacja procedury 
      54				; obsługi przerwań 
      55				; ustalenie strony nr 0 dla trybu tekst
					owego 
      56 0037				zacznij: 
      57 0037  B0 00			mov al, 0 
      58 0039  B4 05			mov ah, 5 
      59 003B  CD 0A			int 10 
      60 003D  B8 0000			mov ax, 0 
      61 0040  8E D8			mov ds,ax ; zerowanie rejestru DS 
      62				; odczytanie zawartości wektora nr 8 i
					 zapisanie go 
      63				; w zmiennej 'wektor8' (wektor nr 8 zaj
					muje w pamięci 4 bajty 
      64				; począwszy od adresu fizycznego 8 * 4
					 = 32) 
      65 0042  66| A1 0020		mov eax,ds:[32] ; adres fizyczny 0*16 +
					 32 = 32 
      66 0046  2E: 66| A3 0033 R	mov cs:wektor8, eax 
      67				 
      68				; wpisanie do wektora nr 8 adresu proce
					dury 'obsluga_zegara' 
      69 004B  B8 ---- R		mov ax, SEG obsluga_zegara ; część s
					egmentowa adresu 
      70 004E  BB 0000 R		mov bx, OFFSET obsluga_zegara ; offset 
					adresu 
      71 0051  FA			cli ; zablokowanie przerwań 
      72				; zapisanie adresu procedury do wektora
					 nr 8 
      73 0052  89 1E 0020		mov ds:[32], bx ; OFFSET 
      74 0056  A3 0022			mov ds:[34], ax ; cz. segmentowa 
Microsoft (R) Macro Assembler Version 5.00                  1/4/25 23:38:13
                                                             Page     1-3


      75 0059  FB			sti ;odblokowanie przerwań 
      76				; oczekiwanie na naciśnięcie klawisza
					 'x' 
      77 005A				aktywne_oczekiwanie: 
      78 005A  B4 01			mov ah,1 
      79 005C  CD 16			int 16H 
      80				; funkcja INT 16H (AH=1) BIOSu ustawia 
					ZF=1 jeśli 
      81				; naciśnięto jakiś klawisz 
      82 005E  74 FA			jz aktywne_oczekiwanie 
      83				; odczytanie kodu ASCII naciśniętego 
					klawisza (INT 16H, AH=0) 
      84				; do rejestru AL 
      85 0060  B4 00			mov ah, 0 
      86 0062  CD 16			int 16H 
      87 0064  3C 78			cmp al, 'x' ; porównanie z kodem liter
					y 'x' 
      88 0066  75 F2			jne aktywne_oczekiwanie ; skok, gdy inn
					y znak 
      89				; deinstalacja procedury obsługi przer
					wania zegarowego 
      90				; odtworzenie oryginalnej zawartości w
					ektora nr 8 
      91 0068  2E: 66| A1 0033 R	mov eax, cs:wektor8 
      92 006D  FA			cli 
      93 006E  66| A3 0020		mov ds:[32], eax ; przesłanie wartośc
					i oryginalnej 
      94				; do wektora 8 w tablicy wektorów 
      95				; przerwań 
      96 0072  FB			sti 
      97				; zakończenie programu 
      98 0073  B0 00			mov al, 0 
      99 0075  B4 4C			mov ah, 4CH 
     100 0077  CD 21			int 21H 
     101 0079				rozkazy ENDS 
     102 0000				nasz_stos SEGMENT stack 
     103 0000  0080[			db 128 dup (?) 
     104	    ??			
     105			 ]	
     106				
     107 0080				nasz_stos ENDS 
     108				END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  1/4/25 23:38:13
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	0079	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

AKTYWNE_OCZEKIWANIE  . . . . . .  	L NEAR	005A	ROZKAZY

LICZNIK  . . . . . . . . . . . .  	L WORD	0031	ROZKAZY

OBSLUGA_ZEGARA . . . . . . . . .  	N PROC	0000	ROZKAZY	Length = 0037

WEKTOR8  . . . . . . . . . . . .  	L DWORD	0033	ROZKAZY
WYSW_DALEJ . . . . . . . . . . .  	L NEAR	0024	ROZKAZY

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	0037	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  GWIAZDKI		


    105 Source  Lines
    105 Total   Lines
     10 Symbols

  50400 + 466144 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
